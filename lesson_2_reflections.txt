What happens when I initialize a repository? Why do I need it?
When I initialize a repository git creates a set of metadata about the directory and begins to track it
I need to do it such that git know to now apply git commands to this directory when I call them

How is the staging area different from the working directory and the repository? What value does it offer?
The staging area is a sort of purgatory for files before they move of to the repository
It allows me to sort this together for a commit before I actually commit them, thus allowing me to have a space where I can test what my commit will look like
It offers value by allowing me to see what my commit will be like before I actually finalize it

How can I use the staging area to make sure I have 1 commit per logical change?
By using the staging area I can make changes to multiple files and then commit these under one commit
This is important as overall 1 logical change in the structure of the software I am working on may involve changes in several files
By doing this I can make sure that even changes that involve multiple files can be grouped under their 1 logical change in a commit

What are some situations when making branches would be helpful in keeping my history organised? How would branches help?
Making branches would be very useful when trying to work on different approaches to my software at the same time,\
Especially when trying to see and compare a set of approaches to implementing certain features
It could also be great for if I need to work on different final products that will ship to different clients etc who may need differing modifications to the code I provide them

How do diagrams help you visualise the branch structure?
The diagrams allow me to see the logical connections between all branches rather than just trying to figure this out in my head from looking at various commit logs
